}
getvariance2(twovars)
dim(twovars)
sampleX[1,]
getvariance1 <- function(vars)
{
malpha <- mean(vars)
getvar_singlepoint <- function(x) mean((vars - malpha)*x)^2)
x <- seq(-1, 1, 0.001)
mean(sapply(x, getvar_singlepoint))
}
getvariance1 <- function(vars)
{
malpha <- mean(vars)
getvar_singlepoint <- function(x) mean(((vars - malpha)*x)^2)
x <- seq(-1, 1, 0.001)
mean(sapply(x, getvar_singlepoint))
}
getvariance1(alphas)
getvariance2 <- function(vars)
{
mvars <- colMeans(vars)
getvar_singlepoint <- function(x) 
{
mean(apply(vars, 1, function(v) (g2(x, v) - g2(x, mvars))^2))
}
x <- seq(-1, 1, 0.1)
mean(sapply(x, getvar_singlepoint))
}
getvariance2(twovars)
getvariance2 <- function(vars)
{
mvars <- colMeans(vars)
getvar_singlepoint <- function(x) 
{
mean(apply(vars, 1, function(v) (g2(x, v) - g2(x, mvars))^2))
}
x <- seq(-1, 1, 0.01)
mean(sapply(x, getvar_singlepoint))
}
getvariance2(twovars)
getvariance2 <- function(vars)
{
mvars <- colMeans(vars)
getvar_singlepoint <- function(x) 
{
mean(apply(vars, 1, function(v) (g2(x, v) - g2(x, mvars))^2))
}
x <- seq(-1, 1, 0.05)
mean(sapply(x, getvar_singlepoint))
}
getvariance2 <- function(vars)
{
mvars <- colMeans(vars)
getvar_singlepoint <- function(x) 
{
mean(apply(vars, 1, function(v) (g2(x, v) - g2(x, mvars))^2))
}
x <- seq(-1, 1, 0.05)
mean(sapply(x, getvar_singlepoint))
}
getvariance2(twovars)
alphas <- matrix(alphas, ncol=1)
colMeans(alphas)
getvariance2 <- function(g, vars)
{
if(is.list(vars))
vars <- matrix(vars, ncol=1)
mvars <- colMeans(vars)
getvar_singlepoint <- function(x) 
{
mean(apply(vars, 1, function(v) (g(x, v) - g(x, mvars))^2))
}
x <- seq(-1, 1, 0.01)
mean(sapply(x, getvar_singlepoint))
}
getvariance2(g2, twovars)
getvariance2(g1, alphas)
getvariance1(alphas)
geta <- function(x)
{
sumxxxx <- sum(x^4)
sumxxy <- sum(x^2*sin(pi*x))
sumxxy/sumxxxx
}
aa <- apply(sampleX, 1, geta)
maa <- mean(aa)
g3 <- function(x, vars) vars[1]*x^2
maa
getbias(g3, aa)
getvariance(g3, aa)
getvariance2(g3, aa)
is.list(aa)
class(aa)
dim(aa)
aa <- matrix(aa, ncol=1)
getvariance2(g3, aa)
getab <- function(x)
{
sumxxxx <- sum(x^4)
sumxx <- sum(x^2)
sumy <- sum(sin(pi*x))
N <- length(x)
sumxxy <- sum(x^2*sin(pi*x))
a <- (sumxxy - sumxx*sumy/N)/(sumxxxx - sumxx^2/N)
b <- (sumy-a*sumxx)/N
c(a,b)
}
aabb <- t(apply(sampleX, 1, getab))
g4 <- function(x, vars) vars[1]*x^2+vars[2]
getbias(g4)
getbias(g4, aabb)
getvariance2(g4, aabb)
q()
10*17+18*7+18
10*17+18*17+18
18*17
10*18+19*16+17
10*19+20*15+15
10*20+21*14+14
10*21+22*13+14
conn <-  url("http://simplystatistics.tumblr.com/")
simplyStats <- readLines(conn, 150)
str(simplyStats)
head(simplyStats)
nchar(simplyStats[2])
nchar(simplyStats[c(2,45,122)])
getwd()
getwd()
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv")
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv", des="./idahohousing.csv")
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv", des="./idahohousing.csv", method="curl")
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv", destfile="./idahohousing.csv", method="curl")
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv", destfile="./idahohousing.csv")
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/ss06hid.csv", destfile="./idahohousing.csv")
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/ss06hid.csv", destfile="./idahohousing.csv", method="curl")
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/ss06hid.csv", destfile="./idahohousing.csv", method="auto")
download.file("http://spark-public.s3.amazonaws.com/dataanalysis/ss06hid.csv", destfile="./data/idahohousing.csv", method="auto")
download.file("http://spark-public.s3.amazonaws.com/dataanalysis/ss06hid.csv", destfile="./quiz/idahohousing.csv", method="auto")
idaho <- read.csv("./quiz/idahohousing.csv")
str(idaho)
dim(idaho)
summary(idaho$VAL)
value <- idaho$VAL[!is.na(idaho$VAL)]
dim(val)
dim(value)
length(value)
length(value)+2076
length(value[value>1000000])
head(value)
head(idaho$VAL)
head(idaho$VAL[24])
idaho$VAL[24]
value[value=24]
value[value==24]
length(value[value==24])
NA==3
idaho$BDS == 3
sum(idaho$BDS == 3 & idaho$RMS == 4, rm.na=T)
?sum
sum(idaho$BDS == 3 & idaho$RMS == 4, na.rm=T)
sum(idaho$BDS == 2 & idaho$RMS == 5, na.rm=T)
sum(idaho$BDS == 2 & idaho$RMS == 7, na.rm=T)
ArgLogical <- idaho$ACR == 3 & idaho$AGS == 6
summary(ArgLogical)
which(NA)
which(c(T,NA))
which(ArgLogical)
indexes <- which(ArgLogical)
subidaho <- idaho[indexes,]
summary(subidaho$MRGX)
?strsplit
names(idaho)[123]
strsplit(names(idaho)[123], "wgtp")
quantile(idaho$YBL)
quantile(idaho$YBL, na.rm=T)
summary(idaho$YBL)
table(idaho$YBL, na.omit=T)
table(idaho$YBL)
idaho[idaho$YBL==-1,]
idaho[which(idaho$YBL==-1),]
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06pid.csv 
")
download.file("http://dl.dropbox.com/u/7710864/data/csv_hid/ss06pid.csv", des="./quiz/idahopopulation.csv")
pop <- read.csv("./quiz/idahopopulation.csv")
str(pop)
dim(pop)
str(pop$SERIALNO)
?merge
joint <- merge(idaho, pop, by="SERIALNO")
dim(joint)
str(unique(idaho$SERIALNO))
str(idaho$SERIALNO)
length(unique(idaho$SERIALNO))
length(unique(pop$SERIALNO))
joint <- merge(idaho, pop, by="SERIALNO", all=F)
dim(joint)
>merge
?merge
joint <- merge(idaho, pop, by="SERIALNO", all=T)
dim(joint)
rm(list=ls())
getwd()
setwd("./project/project1/data/")
data.download.date <- date()
data.download.date
save(data.download.date, file="DateOfDataAccessed.rda")
loan <- read.csv("loansData.csv")
dim(loan)
head(loan)
ls()
apply(loan[1,], class)
sapply(loan[1,], class)
summary(loan$Interest.Rate)
summary(loan$FICO.Range)
ls()
data.download.date
save(data.download.date, loan, file="./loanRaw.rda")
head(loan, 3)
head(loan, 3)
sapply(loan[1,], class)
loan$Interest.Rate[1]
is.numeric(loan$Interest.Rate[1])
as.numeric(loan$Interest.Rate[1])
as.numeric(loan$Interest.Rate[2])
class(loan$Interest.Rate[2])
loan$Interest.Rate[2]
12.12%
sub("%", "", loan$Interest.Rate[2])
as.numeric(sub("%", "", loan$Interest.Rate[2]))
int.rates <- as.numeric(sub("%", "", loan$Interest.Rate))*0.01
head(int.rates)
loan.p <- loan
loan.p$Interest.Rate <- as.numeric(sub("%", "", loan$Interest.Rate))*0.01
loan.p$Debt.To.Income.Ratio <- as.numeric(sub("%", "", loan$Debt.To.Income.Ratio))*0.01
head(loan.p, 2)
summary(loan.p$Interest.Rate)
summary(loan.p$Loan.Length)
loan$Interest.Rate
level(loan$Interest.Rate)
levels(loan$Interest.Rate)
levels(loan$FICO.Range)
levels(loan$Loan.Purpose)
levels(loan$Employment.Length)
levels(loan$State)
summary(loan.p)
NA
is.na(NA)
loan.p$Employment.Length[loan.p$Employment.Length=="n/a"] <- NA
levels(loan$Employment.Length)
levels(loan.p$Employment.Length)
loan.p$Employment.Length[loan.p$Employment.Length=="n/a"]
loan.p$Employment.Length[loan.p$Employment.Length==NA]
loan.p$Employment.Length[loan$Employment.Length==NA]
loan.p$Employment.Length
save(data.download.date, loan, loan.p, file="./loanRaw.rda")
all(is.na(loan.p))
apply(loan.p, 2, is.na)
apply(loan.p, 1, function(x) sum(is.na(x)))
apply(loan.p, 2, function(x) sum(is.na(x)))
which(is.na(loan.p$Open.CREDIT.Lines))
which(is.na(loan.p$Revolving.CREDIT.Balance))
which(is.na(loan.p$Inquiries.in.the.Last.6.Months))
which(is.na(loan.p$Monthly.Income))
which(is.na(loan.p[c("Open.CREDIT.Lines", "$Revolving.CREDIT.Balance")]))
which(is.na(loan.p[c("Open.CREDIT.Lines", "Revolving.CREDIT.Balance")]))
which(is.na(loan.p[c[("Open.CREDIT.Lines", "Revolving.CREDIT.Balance")]]))
which(is.na(loan.p[[c("Open.CREDIT.Lines", "Revolving.CREDIT.Balance")]]))
loan.p[367,]
loan.p[1595,]
table(loan.p$Loan.Purpose)
plot(loan.p$Loan.Purpose)
?par
plot(loan.p$Loan.Purpose, las=2)
ls()
?boxplot
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p)
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.ppar(mfrow=c(1,2), las=2))
plot(loan.p$Loan.Purpose, las=2)
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p)
par(mfrow=c(1,2), las=2)
plot(loan.p$Loan.Purpose, las=2)
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p)
par(mfrow=c(2,1), las=2)
plot(loan.p$Loan.Purpose, las=2)
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p)
?plot
args(plot)
plot(loan.p$Loan.Purpose, xart="n")
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p)
plot(loan.p$Loan.Purpose, xaxt="n")
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p)
plot(loan.p$Loan.Purpose, xaxt="n", ann=F)
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p)
par(mfrow=c(2,1))
plot(loan.p$Loan.Purpose, xaxt="n", ann=F)
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mfrow=c(2,1), las=0)
plot(loan.p$Loan.Purpose, xaxt="n", ann=F)
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mfrow=c(2,1), las=0)
plot(loan.p$Loan.Purpose, xaxt='n')
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mfrow=c(2,1), las=0)
plot(loan.p$Loan.Purpose, xaxt='n')
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mfrow=c(2,1),xaxt='n', las=0)
plot(loan.p$Loan.Purpose, xaxt='n')
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mar)
par$mar
par
par("mar")
par(mfrow=c(2,1),xaxt='n', las=0, mar=c(5.1, 4.1, 4.1, 0)
plot(loan.p$Loan.Purpose, xaxt='n')
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mfrow=c(2,1),xaxt='n', las=0, mar=c(5.1, 4.1, 4.1, 0))
plot(loan.p$Loan.Purpose, xaxt='n')
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mfrow=c(2,1), las=0, mar=c(5.1, 0, 4.1, 0))
plot(loan.p$Loan.Purpose, xaxt='n')
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mfrow=c(2,1), las=0, mar=c(5.1, 4.1, 0, 2.1))
plot(loan.p$Loan.Purpose, xaxt='n')
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mfrow=c(2,1), las=0, mar=c(1, 4.1, 1, 2.1))
plot(loan.p$Loan.Purpose, xaxt='n')
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
par(mfrow=c(2,1), xart="b", las=0, mar=c(1, 4.1, 1, 2.1))
par(mfrow=c(2,1), xaxt="b", las=0, mar=c(1, 4.1, 1, 2.1))
par(mfrow=c(2,1), xaxt="y", las=0, mar=c(1, 4.1, 1, 2.1))
##                21                 39 
??xaxt
par("xaxt")
resetPar <- function() {
    dev.new()
    op <- par(no.readonly = TRUE)
    dev.off()
    op
}
resetPar
resetPar()
par(mfrow=c(2,1), xaxt="s", las=0, mar=c(1, 4.1, 1, 2.1))
plot(loan.p$Loan.Purpose, xaxt="n")
boxplot(Amount.Requested ~ Loan.Purpose, data=loan.p, las=2)
library(lattice)
xyplot(Amounted.Requested ~ Amount.Funded.By.Investors | Loan.Purpose, data=loan.p)
xyplot(Amount.Requested ~ Amount.Funded.By.Investors | Loan.Purpose, data=loan.p)
xyplot(Amount.Requested ~ Amount.Funded.By.InvestorsAmount.Funded.By.Investors | Loan.Purpose, data=loan.p)
xyplot( Amount.Funded.By.Investors ~ Amount.Requested | Loan.Purpose, data=loan.p)
names(loan.p)
xyplot( Interest.Rate ~ Amount.Requested | Loan.Purpose, data=loan.p)
xyplot( Interest.Rate ~ Debt.To.Income.Ratio | Loan.Purpose, data=loan.p)
xyplot( Interest.Rate ~ Debt.To.Income.Ratio, data=loan.p)
xyplot( Interest.Rate ~ FICO.Range, data=loan.p)
xyplot( Interest.Rate ~ Monthly.Income, data=loan.p)
xyplot( Interest.Rate ~ Monthly.Income | Home.Ownership, data=loan.p)
xyplot( Interest.Rate ~ Monthly.Income | Loan.Purpose, data=loan.p)
xyplot( Interest.Rate ~ Monthly.Income | Employment.Length, data=loan.p)
?xyplot
xyplot( Interest.Rate ~ Monthly.Income | Employment.Length, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Debt.To.Income.Ratio | Loan.Purpose, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income | Loan.Purpose, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income | Loan.Length, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income | Loan.Length*Loan.Ourpose, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income | Loan.Length*Loan.Purpose, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income | Loan.Length& Loan.Purpose, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income | c(Loan.Length, Loan.Purpose), data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income | Loan.Length*Loan.Purpose, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income | Home.Ownership & Loan.Purpose, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income | Home.Ownership * Loan.Purpose, data=loan.p, xlim=c(0, 20000))
xyplot( Interest.Rate ~ Monthly.Income , data=loan.p, xlim=c(0, 20000))
xyplot( Amount.Requested ~ Monthly.Income | Loan.Purpose, data=loan.p, xlim=c(0, 20000))
xyplot( Amount.Requested ~ Monthly.Income | Loan.Purpose*Loan.Length, data=loan.p, xlim=c(0, 20000))
library(hmisc)
library(Hmisc)
library("Hmisc")
library("hmisc")
install.packages("hmsic")
install.packages("hmisc")
install.packages("Hmisc")
cut2
library("Hmisc")
cut2
amt.cut <- cut2(loan.p$Amount.Requested, g=10)
amt.cut
table(amt.cut)
xyplot( Interest.Rate ~ Monthly.Income | amt.cut, data=loan.p
)
xyplot( Interest.Rate ~ Monthly.Income | amt.cut, data=loan.p, xlim=c(0,20000))
head(loan.p)
tapply(loan.p$Debt.To.Income.Ratio, loan.p$Home.Ownership, summary)
quantile(loan.p$Monthly.Income)
quantile(loan.p$Monthly.Income, na.rm=T)
hist(loan.p$Monthly.Income)
par
par(mfrow=c(1,1))
hist(loan.p$Monthly.Income)
ls()
par(resetPar)
hist(loan.p$Monthly.Income)
par()=resetPar
par(mar=c(5,4,4,2))
hist(loan.p$Monthly.Income)
sum(loan.p$Monthly.Income > 20000)
sum(loan.p$Monthly.Income > 20000)
sum(loan.p$Monthly.Income > 10000)
sum(loan.p$Monthly.Income > 10000, na.rm=T)
sum(loan.p$Monthly.Income > 20000, na.rm=T)
sum(loan.p$Monthly.Income > 40000, na.rm=T)
sum(loan.p$Monthly.Income > 50000, na.rm=T)
sum(loan.p$Monthly.Income > 80000, na.rm=T)
sum(loan.p$Monthly.Income > 100000, na.rm=T)
which(loan.p$Monthly.Income > 50000)
outlier.id <- which(loan.p$Monthly.Income > 50000)
outlier.id <- which(loan.p$Monthly.Income > 50000)
cutpoints <- quantile(loan.p$Monthly.Income, seq(0, 1, length=10))
cutpoints <- quantile(loan.p$Monthly.Income, seq(0, 1, length=10), na.rm=T)
inc.cut <- cut(data, cutpoints)
inc.cut <- cut(loan.p$Monthly.Income, cutpoints)
levels(inc.cut)
table(inc.cut)
summary((loan.p$Monthly.Income)
)
outlier.id <- c(outlier.id, which(is.na(loan.p$Open.CREDIT.Lines)))
outlier.id
nrows(loan.p[-outlier.id, ])
nrow(loan.p[-outlier.id, ])
loan.p <- loan.p[-outlier.id,]
 hist(loan.p$Monthly.Income)
inc.cut <- cut2(loan.p$Monthly.Income, g=10)
inc.cut <- cut(loan.p$Monthly.Income, 10)
levels(inc.cut)
table(inc.cut)
inc.cut <- cut(loan.p$Monthly.Income, 20)
table(inc.cut)
plot(table(inc.cut))
xyplot( Interest.Rate ~ Monthly.Income |inc.cut, data=loan.p)
xyplot( Interest.Rate ~ Monthly.Income |inc.cut, data=loan.p, xlim=c(0,20000))
bwplot( Interest.Rate ~inc.cut, data=loan.p)
bwplot( Interest.Rate ~inc.cut, data=loan.p, las=2)
bwplot( Interest.Rate ~inc.cut, data=loan.p, las=1)
bwplot( Interest.Rate ~inc.cut, data=loan.p, las=0)
bwplot( Interest.Rate ~inc.cut, data=loan.p)
bwplot( Interest.Rate ~ Debt.To.Income.Ratio, data=loan.p)
xyplot( Interest.Rate ~ Debt.To.Income.Ratio, data=loan.p)
xyplot( Interest.Rate ~ Debt.To.Income.Ratio | inc.cut, data=loan.p)
table(loan.p$State)
bwplot( Interest.Rate ~ State, data=loan.p)
ls()
resetPar
Par(resetPar())
par(resetPar())
bwplot( Interest.Rate ~ State, data=loan.p)
par("mar")
bwplot( Interest.Rate ~ FI, data=loan.p)
bwplot( Interest.Rate ~ FICO.Range, data=loan.p)
bwplot( Interest.Rate ~ FICO.range, data=loan.p)
names(loan.p)
bwplot( Interest.Rate ~ FICO.Range, data=loan.p)
bwplot( Interest.Rate ~ FICO.Range, data=loan.p)
bwplot( Interest.Rate ~ FICO.Range, data=loan.p, las=2)
bwplot( Interest.Rate ~ FICO.Range, data=loan.p, scale(rot=0))
bwplot( Interest.Rate ~ FICO.Range, data=loan.p, scales=list(relation="free"))
bwplot( Interest.Rate ~ FICO.Range, data=loan.p, scales=list(relation="free", rot=0))
bwplot( Interest.Rate ~ FICO.Range, data=loan.p, scales=list(relation="free", rot=90))
bwplot( Interest.Rate ~ FICO.Range, data=loan.p, scales=list(rot=90))
plot( Monthly.Income, Revolving.CREDIT.Balance, data=loan.p)
xyplot( Monthly.Income ~ Revolving.CREDIT.Balance, data=loan.p)
xyplot( Monthly.Income ~ Revolving.CREDIT.Balance | FICO.Range, data=loan.p)
xyplot( Revolving.CREDIT.Balance Monthly.Income | FICO.Range, data=loan.p)
xyplot( Revolving.CREDIT.Balance ~ Monthly.Income | FICO.Range, data=loan.p)
plot(loan.p$Revolving.CREDIT.Balance, loan.p$Monthly.Income, col=loan.p$FICO.Range)
plot(loan.p$Revolving.CREDIT.Balance, loan.p$Monthly.Income, col=loan.p$FICO.Range, pch=16, alpha=0.5)
plot(loan.p$Revolving.CREDIT.Balance, loan.p$FICO.Range, pch=16, alpha=0.5)
plot(loan.p$Revolving.CREDIT.Balance, loan.p$Open.CREDIT.Lines, pch=16, alpha=0.5)
plot(loan.p$Revolving.CREDIT.Balance, loan.p$Open.CREDIT.Lines, pch=16)
bwplot( Interest.Rate ~ FICO.Range, data=loan.p, scales=list(relation="free", rot=90))
bwplot( Revolving.CREDIT.Balance ~ FICO.Range, data=loan.p, scales=list(relation="free", rot=90))
bwplot( Monthly.Income ~ FICO.Range, data=loan.p, scales=list(relation="free", rot=90))
bwplot( Revolving.CREDIT.Balance/Open.CREDIT.Lines ~ FICO.Range, data=loan.p, scales=list(relation="free", rot=90))
xyplot( Interest.Rate ~ Monthly.Income | FICO.Range, data=loan.p)
xyplot( Interest.Rate ~ Monthly.Income | FICO.Range, data=loan.p, as.table=T)
panel.loess(x,y)
xyplot( Interest.Rate ~ Monthly.Income | FICO.Range, data=loan.p, as.table=Txyplot( Interest.Rate ~ Monthly.Income | FICO.Range, data=loan.p, as.table=T, panel=function(x,y,...))
{
panel.xyplot(x,y,...)
panel.loess(x,y)
}
)
xyplot( Interest.Rate ~ Monthly.Income | FICO.Range, data=loan.p, as.table=T, panel=function(x,y,...)
{
##panel.xyplot(x,y,...)
panel.loess(x,y)
}
)
xyplot( Interest.Rate ~ Monthly.Income | FICO.Range, data=loan.p, as.table=T, panel=function(x,y,...)
{
panel.xyplot(x,y,...)
panel.loess(x,y)
}
)
xyplot( Interest.Rate ~ Monthly.Income | FICO.Range, data=loan.p, as.table=T, panel=function(x,y,...)
{
panel.xyplot(x,y,...)
fit <- lm(y ~ x)
panel.abline(fit,col="red")
}
)
save.image("F:\\Google Drive\\Study Note\\Coursera-Data Analysis 2 (R)\\project\\project1\\loan.RData")
q()
q()
